{"version":3,"sources":["components/MapChart.js","components/App.js","index.js"],"names":["geoPaths","MapChart","state","detail","paths","center","zoom","switchPaths","a","b","c","_this","setState","_this2","this","react_default","createElement","renderprops","from","to","config","gentle","styles","index_umd","style","width","height","geography","_ref","geographies","proj","map","geo","i","key","rsmKey","projection","onClick","default","fill","outline","hover","pressed","Component","App","react_router_dom","react_router","exact","path","component","rootElement","document","getElementById","ReactDOM","render","components_App"],"mappings":"wOASMA,EAAW,CAAC,cAAe,YAiElBC,8MA9DbC,MAAQ,CACNC,QAAQ,EACRC,MAAOJ,EAAS,GAChBK,OAAQ,CAAC,EAAG,GACZC,KAAM,KAERC,YAAc,SAACC,EAAGC,EAAGC,GAAM,IACjBP,EAAWQ,EAAKT,MAAhBC,OACRQ,EAAKC,SAAS,CACZR,MAAOD,EAASH,EAAS,GAAKA,EAAS,GACvCK,OAAQF,EAAS,CAAC,EAAG,GAAK,CAAC,EAAG,IAC9BG,KAAMH,EAAS,EAAI,GACnBA,QAASA,4DAIJ,IAAAU,EAAAC,KACP,OACEC,EAAAP,EAAAQ,cAAA,WACED,EAAAP,EAAAQ,cAACC,EAAA,OAAD,CACEC,KAAM,CAAEZ,KAAM,GACda,GAAI,CAAEb,KAAMQ,KAAKZ,MAAMI,MACvBc,OAAQA,SAAOC,QAEd,SAACC,GAAD,OACCP,EAAAP,EAAAQ,cAACO,EAAA,cAAD,CAAeC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,SAC7CX,EAAAP,EAAAQ,cAACO,EAAA,cAAD,CAAelB,OAAQQ,EAAKX,MAAMG,OAAQC,KAAMgB,EAAOhB,MACrDS,EAAAP,EAAAQ,cAACO,EAAA,YAAD,CAAaI,UAAWd,EAAKX,MAAME,OAChC,SAAAwB,GAAA,IAAGC,EAAHD,EAAGC,YAAaC,EAAhBF,EAAgBE,KAAhB,OACCD,EAAYE,IAAI,SAACC,EAAKC,GAAN,OACdlB,EAAAP,EAAAQ,cAACO,EAAA,UAAD,CACEW,IAAKF,EAAIG,OACTR,UAAWK,EACXI,WAAYN,EACZO,QAASxB,EAAKN,YACdiB,MAAO,CACLc,QAAS,CACPC,KAAM,UACNC,QAAS,QAEXC,MAAO,CACLF,KAAM,OACNC,QAAS,QAEXE,QAAS,CACPH,KAAM,OACNC,QAAS,2BA/CdG,aCKRC,yKATX,OACE7B,EAAAP,EAAAQ,cAAC6B,EAAA,EAAD,KACE9B,EAAAP,EAAAQ,cAAA,WACED,EAAAP,EAAAQ,cAAC8B,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhD,aALzB0C,aCCZO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACPvC,EAAAP,EAAAQ,cAAC6B,EAAA,EAAD,KACE9B,EAAAP,EAAAQ,cAACuC,EAAD,OAEFL","file":"static/js/main.aad6acda.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  ZoomableGroup,\r\n  Geographies,\r\n  Geography\r\n} from \"react-simple-maps\";\r\nimport { Spring, config } from 'react-spring/renderprops';\r\n\r\nconst geoPaths = [\"/world.json\", \"/ch.json\"];\r\n\r\nclass MapChart extends Component {\r\n  state = {\r\n    detail: false,\r\n    paths: geoPaths[0],\r\n    center: [0, 0],\r\n    zoom: 1\r\n  };\r\n  switchPaths = (a, b, c) => {\r\n    const { detail } = this.state;\r\n    this.setState({\r\n      paths: detail ? geoPaths[0] : geoPaths[1],\r\n      center: detail ? [0, 0] : [8, 47],\r\n      zoom: detail ? 1 : 10,\r\n      detail: !detail\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Spring\r\n          from={{ zoom: 1 }}\r\n          to={{ zoom: this.state.zoom }}\r\n          config={config.gentle}\r\n        >\r\n          {(styles) => (\r\n            <ComposableMap style={{ width: \"100%\", height: \"auto\" }}>\r\n              <ZoomableGroup center={this.state.center} zoom={styles.zoom}>\r\n                <Geographies geography={this.state.paths}>\r\n                  {({ geographies, proj }) =>\r\n                    geographies.map((geo, i) => (\r\n                      <Geography\r\n                        key={geo.rsmKey}\r\n                        geography={geo}\r\n                        projection={proj}\r\n                        onClick={this.switchPaths}\r\n                        style={{\r\n                          default: {\r\n                            fill: \"#D6D6DA\",\r\n                            outline: \"none\"\r\n                          },\r\n                          hover: {\r\n                            fill: \"#F53\",\r\n                            outline: \"none\"\r\n                          },\r\n                          pressed: {\r\n                            fill: \"#E42\",\r\n                            outline: \"none\"\r\n                          }\r\n                        }}\r\n                      />\r\n                    ))\r\n                  }\r\n                </Geographies>\r\n              </ZoomableGroup>\r\n            </ComposableMap>\r\n          )}\r\n        </Spring>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MapChart;\r\n//const rootElement = document.getElementById(\"root\");\r\n//ReactDOM.render(<App />, rootElement);\r\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport MapChart from \"./MapChart\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/\" component={MapChart} />\n        </div>\n      </Router>\n    );\n  }\n}\nexport default App;","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./components/App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  rootElement\n);\n"],"sourceRoot":""}